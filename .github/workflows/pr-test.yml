    name: PR Tests
    on: [pull_request]

    jobs:
      test:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2

        - name: Set up Node.js
          uses: actions/setup-node@v2
          with:
            node-version: '18'

        - name: Install npm dependencies (root project)
          run: npm install

        - name: Install Playwright browsers
          run: npx playwright install --with-deps

        - name: Build Strapi Docker image for testing
          run: docker build -t strapi-cms-test:${{ github.sha }} .

        - name: Run Strapi Docker container and check status
          run: |
            set -e # Sai imediatamente se um comando falhar
            # Inicia o container Strapi em modo detached e captura o ID.
            CONTAINER_ID=$(docker run -p 1337:1337 --name strapi-test -d \
              -e NODE_ENV=test \
              -e ADMIN_JWT_SECRET="umSegredoAdminSuperSecretoParaTestes" \
              -e API_TOKEN_SALT="umSaltDeApiTokenMuitoSecretoParaTestes" \
              -e TRANSFER_TOKEN_SALT="umSaltDeTransferTokenSecretoParaTestes" \
              -e APP_KEYS="umAppKeyParaTestes,outroAppKeyParaTestes" \
              -e JWT_SECRET="umJwtSecretSecretoParaTestes" \
              strapi-cms-test:${{ github.sha }})

            echo "Container started with ID: $CONTAINER_ID"

            # Dá um pequeno tempo para o container tentar iniciar.
            sleep 5

            # Verifica se o container está realmente rodando.
            # Se não estiver, imprime os logs e falha o passo.
            if ! docker ps --filter "id=$CONTAINER_ID" --filter "status=running" --format "{{.ID}}" | grep -q "$CONTAINER_ID"; then
              echo "Error: Strapi container did not stay running after initial start. Printing logs for diagnosis."
              docker logs $CONTAINER_ID
              exit 1
            fi
            echo "Strapi container is running. Proceeding with health check."

        - name: Wait for Strapi to be ready
          run: |
            echo "Waiting for Strapi to be ready on http://localhost:1337/api/articles..."
            for i in $(seq 1 180); do
              if [ "$(curl -s -o /dev/null -w "%{http_code}" http://localhost:1337/api/articles)" = "200" ]; then
                echo "Strapi API is ready!"
                exit 0
              fi
              echo "Still waiting... ($i/180)"
              sleep 5
            done
            echo "Strapi API did not become ready in time."
            echo "--- Strapi Container Logs (after timeout) ---"
            docker logs strapi-test
            echo "--- End of Logs ---"
            exit 1

        - name: Run Playwright tests
          run: npm run test:e2e
          env:
            CI: true

        - name: Stop and remove Strapi container
          if: always()
          run: docker stop strapi-test && docker rm strapi-test